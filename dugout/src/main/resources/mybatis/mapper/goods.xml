<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycompany.dugout.dao.GoodsDao">
	<select id="selectGoodsList" parameterType="Pager"
		resultType="Goods">
		<![CDATA[
	         select  goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus,goodsmaindata, goodsmaintype,goodsMainName, goodsDetailData, goodsDetailType,goodsDetailName
	         from    (
	                     select rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus,goodsmaindata, goodsmaintype,goodsMainName, goodsDetailData, goodsDetailType,goodsDetailName
	                     from (
	                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus,goodsmaindata, goodsmaintype,goodsMainName, goodsDetailData, goodsDetailType,goodsDetailName
							  FROM goods
							  WHERE goodsStatus != 2 
							  ORDER BY goodsRegDate DESC
	                     )
	                   where rownum <= #{endRowNo}
	             )
	            where rnum >= #{startRowNo}
	      ]]>
	</select>

	<select id="getImg" parameterType="int" resultType="Goods">
		SELECT
		goodsmaindata, goodsmaintype, goodsDetailData, goodsDetailType
		FROM
		goods
		WHERE goodsId = #{goodsId}
	</select>

	<insert id="insertGoods" parameterType="Goods">
		<selectKey keyProperty="goodsId" resultType="int"
			order="BEFORE">
			SELECT seq_goodsId.nextval from dual
		</selectKey>
		INSERT INTO
		goods(goodsId,goodsName,goodsPrice,goodsTeam,goodsCategory,goodsStock,goodsStatus,
		goodsMainData,goodsMainName,goodsMainType,goodsDetailData,goodsDetailName,goodsDetailType,
		goodsRegDate,goodsLikeCount,goodsSaleCount
		)VALUES(
		#{goodsId},#{goodsName},#{goodsPrice},#{goodsTeam},#{goodsCategory},#{goodsStock},1,#{goodsMainData},
		#{goodsMainName},#{goodsMainType},#{goodsDetailData},#{goodsDetailName},#{goodsDetailType},
		sysdate,0,0
		)
	</insert>


	<select id="getTotalRows" resultType="int">
		SELECT count(*)
		FROM goods
		WHERE goodsStatus != 2 
	</select>

	<select id="getTeamList" resultType="Goods">
		<![CDATA[
	         select  goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
	         from    (
	                     select rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
	                     from (
	                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
							  FROM goods
							  where goodsTeam=#{goodsTeam}
							  AND  goodsStatus != 2 
	                     )
	                   where rownum <= #{pager.endRowNo}
	             )
	            where rnum >= #{pager.startRowNo}
	      ]]>
	</select>

	<select id="getTeamRows" parameterType="String" resultType="int">
		SELECT count(*)
		FROM goods
		WHERE goodsTeam = #{goodsTeam}
		AND goodsStatus != 2 
	</select>

	<select id="selectGoodsDetail" parameterType="int"
		resultType="Goods">
		select goodsId, goodsName, goodsTeam, goodsPrice,
		goodsCategory, goodsStock, goodsStatus
		from goods
		where goodsId = #{goodsId}
		AND goodsStatus != 2 
	</select>

	<update id="updateGoods" parameterType="Goods">
		UPDATE goods set
		goodsId=#{goodsId},
		goodsName = #{goodsName},
		goodsTeam = #{goodsTeam},
		goodsPrice = #{goodsPrice},
		goodsCategory = #{goodsCategory},
		goodsStock = #{goodsStock},
		goodsStatus = #{goodsStatus}
		<if test="goodsMainName!=null">
			,
			goodsMainName = #{goodsMainName},
			goodsMainType =
			#{goodsMainType},
			goodsMainData = #{goodsMainData}
		</if>
		<if test="goodsDetailName!=null">
			,
			goodsDetailName = #{goodsDetailName},
			goodsDetailType =
			#{goodsDetailType},
			goodsDetailData = #{goodsDetailData}
		</if>
		WHERE goodsId=#{goodsId}

	</update>
	
	<update id="addSaleCount" parameterType="int">
		UPDATE goods SET
		goodsSaleCount = goodsSaleCount + ${count}
		WHERE goodsId=#{goodsId}
	</update>

	<select id="selectBestGoods" parameterType="Pager"
		resultType="Goods">
	<![CDATA[
	         select  goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsSaleCount,goodsStatus
	         from    (
	                     select rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsSaleCount,goodsStatus
	                     from (
	                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsSaleCount,goodsStatus
							  FROM goods
							  WHERE goodsStatus != 2  
							  ORDER BY goodsSaleCount desc
	                     )
	                   where rownum <= #{endRowNo}
	             )
	            where rnum >= #{startRowNo}
	      ]]>
	</select>

	<select id="selectRecommendGoods" parameterType="Pager"
		resultType="Goods">
	<![CDATA[
	         select  goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsLikeCount,goodsStatus
	         from    (
	                     select rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsLikecount,goodsStatus
	                     from (
	                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsLikeCount,goodsStatus
							  FROM goods
							   WHERE goodsStatus != 2  
							  ORDER BY goodsLikecount desc
	                     )
	                   where rownum <= #{endRowNo}
	             )
	            where rnum >= #{startRowNo}
	      ]]>
	</select>

	<select id="getLimitRows" resultType="int">
	<![CDATA[
	    SELECT count(*)
	    FROM (
	        SELECT goodsId
	        FROM goods
	        WHERE rownum <= 32
	    )
     ]]>
	</select>

	<select id="getCategoryLimitRows" parameterType="String"
		resultType="int">
	<![CDATA[
	    SELECT count(*)
	    FROM goods
        WHERE goodsCategory = #{categoryNum}
     ]]>
	</select>

	<select id="selectNewGoods" parameterType="Pager"
		resultType="Goods">
	<![CDATA[
	         select  goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsRegDate,goodsStatus
	         from    (
	                     select rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsRegDate,goodsStatus
	                     from (
	                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory,goodsRegDate,goodsStatus
							  FROM goods
							  WHERE goodsStatus != 2 
							  ORDER BY goodsRegDate desc
	                     )
	                   where rownum <= #{endRowNo}
	             )
	            where rnum >= #{startRowNo}
	      ]]>
	</select>

	<select id="getTotalRowsByKeyword" parameterType="String"
		resultType="int">
	    <![CDATA[
	        SELECT count(*)
	        FROM goods
	        WHERE goodsName LIKE '%' || #{keyword} || '%' OR goodsTeam LIKE '%' || #{keyword} || '%'
	    ]]>
	</select>


	<select id="getGoodsListByKeyword" resultType="Goods">
		<![CDATA[
	         SELECT  goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
	         FROM    (
	                     SELECT rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
	                     FROM (
	                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
							  FROM goods
							  WHERE goodsName LIKE '%' || #{keyword} || '%' OR goodsTeam LIKE '%' || #{keyword} || '%'
	                     )
	                   WHERE rownum <= #{pager.endRowNo}
	             )
	            WHERE rnum >= #{pager.startRowNo}
	      ]]>
	</select>

	<select id="getCategoryGoodsList" resultType="Goods">
		<![CDATA[
	         SELECT  goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
	         FROM    (
	                     SELECT rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
	                     FROM (
	                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
							  FROM goods
							  WHERE goodsCategory = #{categoryNum}
	                     )
	                   WHERE rownum <= #{pager.endRowNo}
	             )
	            WHERE rnum >= #{pager.startRowNo}
	      ]]>
	</select>

	 <select id="getSortedGoodsList" resultType="Goods">
	        SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
	        FROM (
	            SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus, ROWNUM as rn
	            FROM (
	                SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus,
	                	       goodsRegDate, goodsSaleCount, goodsLikeCount
	                FROM (
		                SELECT goodsid, goodsname, goodsteam, goodsprice, goodscategory, goodsstock, goodsstatus,
						           goodsRegDate, goodsSaleCount, goodsLikeCount
						FROM (
						    SELECT goodsid, goodsname, goodsteam, goodsprice, goodscategory, goodsstock, goodsstatus,
						                goodsRegDate, goodsSaleCount, goodsLikeCount
						    FROM goods
						    ORDER BY
						        <if test="kind == 'new'">goodsRegDate DESC</if>
						        <if test="kind == 'best'">goodsSaleCount DESC</if>
						        <if test="kind == 'rec'">goodsLikeCount DESC</if>
						)
						WHERE ROWNUM <![CDATA[<]]>= 32
					)
	                ORDER BY
	                	<if test="sort == '가격높은순'">goodsPrice DESC</if>
	                	<if test="sort == '가격낮은순'">goodsPrice ASC</if>
	                	<if test="sort == '많이팔린순'">goodsSaleCount DESC</if>
	                	<if test="sort == '인기순'">goodsLikeCount DESC</if>
	                	<if test="sort == '최신순'">goodsRegDate DESC</if>
	            )
	            WHERE ROWNUM <![CDATA[<]]>= #{pager.endRowNo}
	        )
	        WHERE rn <![CDATA[>]]>= #{pager.startRowNo}
	</select> 
	
	<select id="getSortedCategory" resultType="Goods">
         SELECT  goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
         FROM    (
                     SELECT rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
                     FROM (
                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
						  FROM goods
						  <if test="category != null">
						  WHERE goodsCategory = #{category}
						  </if>
						  ORDER BY
		                	<if test="sort == '가격높은순'">goodsPrice DESC</if>
		                	<if test="sort == '가격낮은순'">goodsPrice ASC</if>
		                	<if test="sort == '많이팔린순'">goodsSaleCount DESC</if>
		                	<if test="sort == '인기순'">goodsLikeCount DESC</if>
		                	<if test="sort == '최신순'">goodsRegDate DESC</if>
                     )
                   WHERE rownum <![CDATA[<]]>= #{pager.endRowNo}
             )
            WHERE rnum <![CDATA[>]]>= #{pager.startRowNo}
	</select>
	
	<select id="getSortedKeyword" resultType="Goods">
         SELECT  goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
         FROM    (
                     SELECT rownum as rnum, goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
                     FROM (
                          SELECT goodsid,goodsname,goodsteam,goodsprice, goodscategory, goodsstock, goodsstatus
						  FROM goods
						  WHERE goodsName LIKE '%' || #{keyword} || '%' OR goodsTeam LIKE '%' || #{keyword} || '%'
						  ORDER BY
		                	<if test="sort == '가격높은순'">goodsPrice DESC</if>
		                	<if test="sort == '가격낮은순'">goodsPrice ASC</if>
		                	<if test="sort == '많이팔린순'">goodsSaleCount DESC</if>
		                	<if test="sort == '인기순'">goodsLikeCount DESC</if>
		                	<if test="sort == '최신순'">goodsRegDate DESC</if>
                     )
                   WHERE rownum <![CDATA[<]]>= #{pager.endRowNo}
             )
            WHERE rnum <![CDATA[>]]>= #{pager.startRowNo}
	</select>
	
	<update id="updateGoodsQuantity">
    UPDATE goods
    SET 
        goodsSaleCount = goodsSaleCount + #{goodsQuantity}, 
        goodsStock = goodsStock  - #{goodsQuantity},
        goodsStatus = CASE 
                    WHEN (goodsStock - #{goodsQuantity}) <![CDATA[<]]>= 0 THEN 0 
                    ELSE goodsStatus
                 END
    WHERE goodsId = #{goodsId}
	</update>

	
</mapper>